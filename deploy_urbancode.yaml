---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: @kubename@
  namespace: @namespace@
  annotations:
    deployment.kubernetes.io/revision: '4'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: @kubename@
  template:
    metadata:
      labels:
        app: @kubename@
    spec:
      containers:
      - name: @kubename@
        image: mycluster.icp:8500/default/devops-demo:@imageversion@
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: @kubename@-service
  namespace: @namespace@
  labels:
    app: @kubename@
spec:
  ports:
  - name: '8080'
    protocol: TCP
    port: 9080
    targetPort: 9080
    nodePort: @nodeport@
  selector:
    app: @kubename@
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: @kubename@-ingress
  namespace: @namespace@
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: @ingressurl@
    http:
      paths:
      - backend:
          serviceName: @kubename@-service
          servicePort: 9080
